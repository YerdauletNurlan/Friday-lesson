Vagrant
mkdir vagrant create directory where vagrant will be
cd vagrant 
vagrant init - add vagrantfile 
nano Vagrantfile
vagrant up - run vagrant
vagrant ssh host1 - go into host1
vagrant halt - stop vagrant



HOST1
Installing haproxy
sudo add-apt-repository ppa:vbernat/haproxy-1.8
sudo apt-get update
sudo apt-get install haproxy
nano /etc/haproxy/haproxy.cfg - open haproxy config file
sudo systemctl status haproxy - if you write config file correctly haproxy will work 
sudo systemctl restart haproxy - restart haproxy after updating config file


HOST2
Installing docker
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt update
sudo apt install docker-ce

sudo systemctl status docker - check docker service status
sudo docker run -it --rm -d -p 8080:80 --name web nginx - run docker container
sudo docker ps - check container



haproxy config file
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http



#==========================================
frontend front1
        bind *:8080
        default_backend back1

frontend front2
        bind *:8081
        default_backend back2

backend back1
        balance roundrobin
        server web1 192.167.100.12:8080
        server web1 192.167.100.12:8081

backend back2
        balance roundrobin
        server web1 192.167.100.12:8082
        server web1 192.167.100.12:8083


#==========================================




